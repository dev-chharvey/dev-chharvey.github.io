@import (reference) url('../core/styles/project.less');

/*###############*\
    resume.less
\*###############*/

//Table of Contents
//- VARIABLES
//- BASE/RESET
//- STRUCTURAL OBJECTS
//- COSMETIC COMPONENTS
//- TRUMPS


/*++++++++++++++*\
    #VARIABLES
\*++++++++++++++*/
@datewidth: (768px * @phi3); // (8in * phi3) or (8in * 0.236067977499789696)
@datewidth: @golden3; // 23.6067977499789696%
//++++ #end VARIABLES ++++//


/*+++++++++++++++*\
    #BASE/RESET
\*+++++++++++++++*/
body {
  @media screen {
    position: relative; // so that absolutely positioned elements are sized proportionally
    font-family: @project_font_family_prose;
  }
  @media print {
    width: 768px; // 8in
    font-family: 'Marion','Times','Times New Roman',serif;
  }
}

h1, h2, h3, h4, h5, h6 {
  .spacing-top(0);
  .spacing-bottom(0);
}
p {
  .spacing-bottom(0);
}
ul {
  padding-left: 0.25in;
}
a {
  @media print {
    text-decoration: none;
  }
}
i[lang] {
  font-family: inherit;
}
cite {
  font-style: inherit;
}
//++++ #end RESET ++++//


/*+++++++++++++++++++++++*\
    #STRUCTURAL OBJECTS
\*+++++++++++++++++++++++*/
// The Header contains my name (`res-Name`) and contact information (`res-Postal`).
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-01-22
.res-Header {
  .spacing-bottom(@project_vru);
  @media screen {
    .hr-bottom(1px; solid; @project_color_h_major);
    font-family: @project_font_family_base;
  }
}
  // My name at the top of the resume.
  .res-Header__Name {
    .spacing-top(@project_vru);
    .spacing-bottom(@project_vru);
  }


// A Skill is a top-level section, e.g. Teaching Experience.
// It contains a `Skill__Title`,
// and may contain `Org` Components or `AchList` Components.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-01-08
.res-Skill {
  @media screen {
    border-left: 1px dotted fadeout(@project_color_h_minor, 50%);
    padding-left: 0.5rem;
    margin-left: -0.5rem;
  }
}
  // The title of each Skill, e.g. "Teaching Experience".
  .res-Skill__Title {
    @media screen {
      padding-right: 1rem;
      text-align: right;
    }
    @media print {
      .spacing-bottom(@project_vru);
    }
  }

// A Org is an item in a Skill. It has an organization name and location.
// It usually contains an `Org__Header` and an `Org__Detail`.
//
// On the same level as an Org, a `Org--Obj` is a paragraph that describes an objective.
// It is in the Skill belonging to Objective
//
// On the same level as an Org, an Institution (`Org--Inst`) is an educational organization
// (college/university) with a name and location. It is also in a Skill, namely,
// the one corresponding to Education.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-05-10
.res-Org {
  .spacing-bottom(@project_vru);
  &--Obj {
    @media print {
      margin-top: (-2 * @project_vru);
    }
  }
  &--Inst {
    .flexbox();
    .flex-direction(column);
    &__Name { // The name of an institution organization
      .flex-order(1);
      margin-top: -@project_vru;
    }
  }
  &__Header {
    @media print {
      .flexbox();
    }
    &__Titles {
      .flexbox();
      @media print {
        .flex-order(1);
      }
      &__Name { // The name of an organization.
        .flex-order(1);
      }
      &__JobTitle { // The title of a job, e.g. a position held at an organization.
        padding-right: 1rem;
      }
    }
    &__Spacetime {
      @media screen {
        .flexbox();
      }
      @media print {
        width: @datewidth;
      }
      &__Dates { // Dates worked at each organization.
        @media screen {
          padding-right: 0.5rem;
        }
      }
      &__Place { // The city or location of an organization.
        @media screen {
          .parens();
        }
      }
    }
  }
  &__Detail {
    @media print {
      margin-top: -@project_vru;
    }
  }
}

// used for when this object has no corresponding date or term
.res-HasNoDate {
  @media print {
    margin-left: @datewidth;
  }
}

// A list of achievements such as awards or memberships.
.res-ListAchv {
  @media print {
    margin-top: -@project_vru;
  }
}

// An award in a list of achievements.
.res-ListAchv__Award {
  margin-top: 0; // override dd + dt
  font-weight: inherit;
  @media screen {
    display: inline;
    &::before { // creates line breaks
      content: '';
      display: block;
    }
  }
  @media print {
    margin-left: @datewidth;
  }
}

// A date for an award/achievement.
.res-ListAchv__Date {
  @media screen {
    display: inline;
    .parens();
  }
  @media print {
    width: @datewidth;
    .pull-this(@project_vru);
  }
}

.res-Footer {
  .hr-top(1px; solid; @project_color_h_minor);
  .font-size-block(@project_font_size_sml; @project_line_height);
}
//++++ #end STRUCTURAL OBJECTS ++++//


/*++++++++++++++++++++++++*\
    #COSMETIC COMPONENTS
\*++++++++++++++++++++++++*/
.res-H1,
.res-H2,
.res-H3,
.res-H4,
.res-H5,
.res-H6 {
  font-style: inherit;
  font-weight: inherit;
  font-variant: inherit;
  @media screen {
    font-family: @project_font_family_base;
  }
  @media print {
    font-family: inherit;
    color: inherit;
  }
}
.res-H1,
.res-H2 {
  font-weight: bold;
  @media print {
    .font-size-block(@project_font_size_lrg; @project_line_height);
  }
}
.res-H3,
.res-H4 {
  font-size: inherit;
  line-height: inherit;
}
.res-H1 {
  text-align: inherit;
  @media screen {
    font-variant: small-caps;
  }
  @media print {
    text-transform: uppercase;
  }
}
.res-H2 {
  @media screen {
    .font-size-block(1.5; @project_line_height);
    .border-vert(bottom); // undo h2 default
  }
  @media print {
    font-variant: small-caps;
  }
}
.res-H3 {
  font-weight: bold;
  @media screen {
    font-variant: small-caps;
  }
}
.res-H4 {
  font-style: italic;
}

// camouflage hyperlinks: // may move this to core project at a later time
a.res-Camo { // specificity HACK
  font-style: inherit;
  text-decoration: none;
  color: inherit;
  // &:hover {
  //   text-decoration: none;
  //   color: inherit;
  // }
}

.c-Label--resTech {
  @media screen {
    margin-left: 0; // override margin-left in `.c-Label`
    margin-right: 0.5rem;
  }
  @media print {
    // from `.o-ListInline__Item--comma`
    &:not(:last-child)::after {
      content: ',\0020';
    }
  }
}
//++++ #end COSMETIC COMPONENTS ++++//


/*+++++++++++*\
    #TRUMPS
\*+++++++++++*/
//++++ #end TRUMPS ++++//
