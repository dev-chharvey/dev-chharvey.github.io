
/*############*\
    _hr.less
\*############*/


// This stylesheet defines mixins used for creating an `hr`-like border on the top or bottom
// of an Element. Rather than using an `<hr/>` Element, which doesn't really provide any
// semantic value, use `</section><section>` (or whichever Element is appropriate) and
// style it/them using CSS. Use these mixins to style the end of the first section, and/or the
// beginning of the second section with a border. Using CSS to style borders also provides more
// flexible options that cannot be achieved by the `<hr/>` Element alone.


/**
  * Adds a top/bottom border, while adjusting padding to be a Golden proportion to 1vru,
  * and adjusts margin to keep vertical rhythm.
  *
  * `.vru-top-phi(...)`    adjusts top padding to be the larger  of the proportion (0.618034)
  * `.vru-top-phi(c; ...)` adjusts top padding to be the smaller of the proportion (0.381966)
  *
  * `.vru-bottom-phi(...)`    adjusts bottom padding to be the larger  of the proportion (0.618034)
  * `.vru-bottom-phi(c; ...)` adjusts bottom padding to be the smaller of the proportion (0.381966)
  *
  * `.vru-top-even(...)`    adjusts top    padding to be an even proportion (0.5)
  * `.vru-bottom-even(...)` adjusts bottom padding to be an even proportion (0.5)
  *
  * `.vru-top-undo(...)`    removes top    border, padding, and margin completely
  * `.vru-bottom-undo(...)` removes bottom border, padding, and margin completely
@params
: @n     : value of the border-top-width property.
           Must be unitless but represent number of pixels.
           Must be less than the number of pixels in 1 vru.
: @style : value of the border-top-style property (default to `solid`)
: @color : value of the border-top-color property (default to `currentColor`)
@tags
: #verticalrhythm
: #golden
: #border
@author
: Chris Harvey
@updated
: 2015-02-17
  */
// .vru-top-phi(@n; @style; @color) {
//   @width_rem: @n * (1rem/16); // assuming 1rem = 16px by user agent
//   border-top: @width_rem  @style  @color;
//   padding-top: ((@vru_core * @phi1) - @width_rem);
//   margin-top: -(@vru_core * @phi1); // -((@vru_core * @phi1) - @width_rem) - @width_rem;
// }
// .vru-top-phi(@n; @style) {
//   .vru-top-phi(@n; @style; currentColor);
// }
// .vru-top-phi(@n) {
//   .vru-top-phi(@n; solid);
// }
// .vru-top-phi() {
//   .vru-top-phi(0);
// }
//
// .vru-top-phi-c(@n; @style; @color) {
//   @width_rem: @n * (1rem/16); // assuming 1rem = 16px by user agent
//   border-top: @width_rem  @style  @color;
//   padding-top: ((@vru_core * @phi2) - @width_rem);
//   margin-top: -(@vru_core * @phi2); // -((@vru_core * @phi2) - @width_rem) - @width_rem;
// }
// .vru-top-phi-c(@n; @style) {
//   .vru-top-phi-c(@n; @style; currentColor);
// }
// .vru-top-phi-c(@n) {
//   .vru-top-phi-c(@n; solid);
// }
// .vru-top-phi-c() {
//   .vru-top-phi-c(0);
// }

.vru-top-even(@n; @style; @color) {
  @width_rem: @n * (1rem/16); // assuming 1rem = 16px by user agent
  border-top: @width_rem  @style  @color;
  padding-top: ((@project_vru * 0.5) - @width_rem);
  margin-top: -(@project_vru * 0.5); // -((@project_vru * 0.5) - @width_rem) - @width_rem;
}
.vru-top-even(@n; @style) {
  .vru-top-even(@n; @style; currentColor);
}
.vru-top-even(@n) {
  .vru-top-even(@n; solid);
}
.vru-top-even() {
  .vru-top-even(0);
}

.vru-top-undo() {
  border-top:  0;
  padding-top: 0;
  margin-top:  0;
}

// .vru-bottom-phi(@n; @style; @color) {
//   @width_rem: @n * (1rem/16); // assuming 1rem = 16px by user agent
//   border-bottom: @width_rem  @style  @color;
//   padding-bottom: ((@vru_core * @phi1) - @width_rem);
//   margin-bottom:  @vru_core * @phi2; // @vru_core - ((@vru_core * @phi1) - @width_rem) - @width_rem;
// }
// .vru-bottom-phi(@n; @style) {
//   .vru-bottom-phi(@n; @style; currentColor);
// }
// .vru-bottom-phi(@n) {
//   .vru-bottom-phi(@n; solid);
// }
// .vru-bottom-phi() {
//   .vru-bottom-phi(0);
// }
//
// .vru-bottom-phi-c(@n; @style; @color) {
//   @width_rem: @n * (1rem/16); // assuming 1rem = 16px by user agent
//   border-bottom: @width_rem  @style  @color;
//   padding-bottom: ((@vru_core * @phi2) - @width_rem);
//   margin-bottom:  @vru_core * @phi1; // @vru_core - ((@vru_core * @phi2) - @width_rem) - @width_rem;
// }
// .vru-bottom-phi-c(@n; @style) {
//   .vru-top-phi-c(@n; @style; currentColor);
// }
// .vru-bottom-phi-c(@n) {
//   .vru-bottom-phi-c(@n; solid);
// }
// .vru-bottom-phi-c() {
//   .vru-bottom-phi-c(0);
// }

.vru-bottom-even(@n; @style; @color) {
  @width_rem: @n * (1rem/16); // assuming 1rem = 16px by user agent
  border-bottom: @width_rem  @style  @color;
  padding-bottom: ((@project_vru * 0.5) - @width_rem);
  margin-bottom:  @project_vru * 0.5; // @project_vru - ((@project_vru * 0.5) - @width_rem) - @width_rem;
}
.vru-bottom-even(@n; @style) {
  .vru-bottom-even(@n; @style; currentColor);
}
.vru-bottom-even(@n) {
  .vru-bottom-even(@n; solid);
}
.vru-bottom-even() {
  .vru-bottom-even(0);
}

.vru-bottom-undo() {
  border-bottom:  0;
  padding-bottom: 0;
  margin-bottom:  0;
}
