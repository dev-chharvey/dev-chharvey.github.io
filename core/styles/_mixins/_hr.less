
/*############*\
    _hr.less
\*############*/


// This stylesheet defines mixins used for creating an `hr`-like border on the top or bottom
// of an Element. Rather than using an `<hr/>` Element, which doesn't really provide any
// semantic value, use `</section><section>` (or whichever Element is appropriate) and
// style it/them using CSS. Use these mixins to style the end of the first section, and/or the
// beginning of the second section with a border. Using CSS to style borders also provides more
// flexible options that cannot be achieved by the `<hr/>` Element alone.


/**
  * Adds a top/bottom border, while adjusting padding to be a Golden proportion to 1vru,
  * and adjusts margin to keep vertical rhythm.
  *
  * `.vru-top-phi(...)`    adjusts top padding to be the larger  of the proportion (0.618034)
  * `.vru-top-phi(c; ...)` adjusts top padding to be the smaller of the proportion (0.381966)
  *
  * `.vru-bottom-phi(...)`    adjusts bottom padding to be the larger  of the proportion (0.618034)
  * `.vru-bottom-phi(c; ...)` adjusts bottom padding to be the smaller of the proportion (0.381966)
  *
  * `.vru-top-even(...)`    adjusts top    padding to be an even proportion (0.5)
  * `.vru-bottom-even(...)` adjusts bottom padding to be an even proportion (0.5)
  *
  * `.vru-top-undo(...)`    removes top    border, padding, and margin completely
  * `.vru-bottom-undo(...)` removes bottom border, padding, and margin completely
@params
: @width : value of the border-*-width property, in any unit (default to `0`)
: @style : value of the border-*-style property (default to `solid`)
: @color : value of the border-*-color property (default to `currentColor`)
@tags
: #verticalrhythm
: #golden
: #border
@author
: Chris Harvey
@updated
: 2015-02-18
  */
.vru-top(@width; @style; @color; @space) {
  &::before {
    content: '';
    display: block;
    .border-vert-one(top; @width; @style; @color);
    position: relative;
    bottom: @space;
  }
}

// .vru-top-phi(@width; @style; @color) {
//   .vru-top(@width; @style; @color; (@phi1 * @project_vru));
// }
// .vru-top-phi(@width; @style) {
//   .vru-top-phi(@width; @style; currentColor);
// }
// .vru-top-phi(@width) {
//   .vru-top-phi(@width; solid);
// }
// .vru-top-phi() {
//   .vru-top-phi(0);
// }
//
// .vru-top-phi-c(@width; @style; @color) {
//   .vru-top(@width; @style; @color; (@phi2 * @project_vru));
// }
// .vru-top-phi-c(@width; @style) {
//   .vru-top-phi-c(@width; @style; currentColor);
// }
// .vru-top-phi-c(@width) {
//   .vru-top-phi-c(@width; solid);
// }
// .vru-top-phi-c() {
//   .vru-top-phi-c(0);
// }

.vru-top-even(@width; @style; @color) {
  .vru-top(@width; @style; @color; (0.5 * @project_vru));
}
.vru-top-even(@width; @style) {
  .vru-top-even(@width; @style; currentColor);
}
.vru-top-even(@width) {
  .vru-top-even(@width; solid);
}
.vru-top-even() {
  .vru-top-even(0);
}

.vru-bottom(@width; @style; @color; @space) {
  &::after {
    content: '';
    display: block;
    .border-vert-one(bottom; @width; @style; @color);
    position: relative;
    top: @space;
  }
}

// .vru-bottom-phi(@width; @style; @color) {
//   .vru-bottom(@width; @style; @color; (@phi1 * @project_vru));
// }
// .vru-bottom-phi(@width; @style) {
//   .vru-bottom-phi(@width; @style; currentColor);
// }
// .vru-bottom-phi(@width) {
//   .vru-bottom-phi(@width; solid);
// }
// .vru-bottom-phi() {
//   .vru-bottom-phi(0);
// }
//
// .vru-bottom-phi-c(@width; @style; @color) {
//   .vru-bottom(@width; @style; @color; (@phi2 * @project_vru));
// }
// .vru-bottom-phi-c(@width; @style) {
//   .vru-top-phi-c(@width; @style; currentColor);
// }
// .vru-bottom-phi-c(@width) {
//   .vru-bottom-phi-c(@width; solid);
// }
// .vru-bottom-phi-c() {
//   .vru-bottom-phi-c(0);
// }

.vru-bottom-even(@width; @style; @color) {
  .vru-bottom(@width; @style; @color; (0.5 * @project_vru));
}
.vru-bottom-even(@width; @style) {
  .vru-bottom-even(@width; @style; currentColor);
}
.vru-bottom-even(@width) {
  .vru-bottom-even(@width; solid);
}
.vru-bottom-even() {
  .vru-bottom-even(0);
}
