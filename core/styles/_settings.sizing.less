
/*################*\
    _sizing.less
\*################*/


/*+++++++++++\/
    #SIZING
\*+++++++++++*/

/*----------------\/
    #Even Values
\*----------------*/
@1o60:  (100% * ( 1/60)); //  1.666%
@2o60:  (100% * ( 2/60)); //  3.333%
@3o60:  (100% * ( 3/60)); //  5%
@4o60:  (100% * ( 4/60)); //  6.666%
@5o60:  (100% * ( 5/60)); //  8.333%
@6o60:  (100% * ( 6/60)); // 10%
@7o60:  (100% * ( 7/60)); // 11.666%
@8o60:  (100% * ( 8/60)); // 13.333%
@9o60:  (100% * ( 9/60)); // 15%
@10o60: (100% * (10/60)); // 16.666%
@11o60: (100% * (11/60)); // 18.333%
@12o60: (100% * (12/60)); // 20%
@13o60: (100% * (13/60)); // 21.666%
@14o60: (100% * (14/60)); // 23.333%
@15o60: (100% * (15/60)); // 25%
@16o60: (100% * (16/60)); // 26.666%
@17o60: (100% * (17/60)); // 28.333%
@18o60: (100% * (18/60)); // 30%
@19o60: (100% * (19/60)); // 31.666%
@20o60: (100% * (20/60)); // 33.333%
@21o60: (100% * (21/60)); // 35%
@22o60: (100% * (22/60)); // 36.666%
@23o60: (100% * (23/60)); // 38.333%
@24o60: (100% * (24/60)); // 40%
@25o60: (100% * (25/60)); // 41.666%
@26o60: (100% * (26/60)); // 43.333%
@27o60: (100% * (27/60)); // 45%
@28o60: (100% * (28/60)); // 46.666%
@29o60: (100% * (29/60)); // 48.333%
@30o60: (100% * (30/60)); // 50%
@31o60: (100% * (31/60)); // 51.666%
@32o60: (100% * (32/60)); // 53.333%
@33o60: (100% * (33/60)); // 55%
@34o60: (100% * (34/60)); // 56.666%
@35o60: (100% * (35/60)); // 58.333%
@36o60: (100% * (36/60)); // 60%
@37o60: (100% * (37/60)); // 61.666%
@38o60: (100% * (38/60)); // 3.333%
@39o60: (100% * (39/60)); // 65%
@40o60: (100% * (40/60)); // 66.666%
@41o60: (100% * (41/60)); // 68.333%
@42o60: (100% * (42/60)); // 70%
@43o60: (100% * (43/60)); // 71.666%
@44o60: (100% * (44/60)); // 73.333%
@45o60: (100% * (45/60)); // 75%
@46o60: (100% * (46/60)); // 76.666%
@47o60: (100% * (47/60)); // 78.333%
@48o60: (100% * (48/60)); // 80%
@49o60: (100% * (49/60)); // 81.666%
@50o60: (100% * (50/60)); // 83.333%
@51o60: (100% * (51/60)); // 85%
@52o60: (100% * (52/60)); // 86.666%
@53o60: (100% * (53/60)); // 88.333%
@54o60: (100% * (54/60)); // 90%
@55o60: (100% * (55/60)); // 91.666%
@56o60: (100% * (56/60)); // 93.333%
@57o60: (100% * (57/60)); // 95%
@58o60: (100% * (58/60)); // 96.666%
@59o60: (100% * (59/60)); // 98.333%
@60o60: (100% * (60/60)); // 100%

// shortcuts:
@1o1: @60o60;
@1o2: @30o60;
@2o2: @60o60;
@1o3: @20o60;
@2o3: @40o60;
@3o3: @60o60;
@1o4: @15o60;
@2o4: @30o60;
@3o4: @45o60;
@4o4: @60o60;
@1o5: @12o60;
@2o5: @24o60;
@3o5: @36o60;
@4o5: @48o60;
@5o5: @60o60;
@1o6: @10o60;
@2o6: @20o60;
@3o6: @30o60;
@4o6: @40o60;
@5o6: @50o60;
@6o6: @60o60;
//---- #end Even Values ----//

/*------------------*\
    #Golden Values
\*------------------*/
@phi0: 1;
@phi1: ((-1 + sqrt(5)) / 2); // 0.61803399
@phi2: (@phi1 * @phi1);      // 0.38196601 // Math.pow(@phi,  2);
@phi3: (@phi2 * @phi1);      // 0.23606798 // Math.pow(@phi,  3);
@phi4: (@phi3 * @phi1);      // 0.14589803 // Math.pow(@phi,  4);
@phi5: (@phi4 * @phi1);      // 0.09016994 // Math.pow(@phi,  5);
@phi6: (@phi5 * @phi1);      // 0.05572809 // Math.pow(@phi,  6);
@phi7: (@phi6 * @phi1);      // 0.03444185 // Math.pow(@phi,  7);
@phi8: (@phi7 * @phi1);      // 0.02128624 // Math.pow(@phi,  8);
@phi9: (@phi8 * @phi1);      // 0.01315562 // Math.pow(@phi,  9);
@phiA: (@phi9 * @phi1);      // 0.00813062 // Math.pow(@phi, 10);
@phiB: (@phiA * @phi1);      // 0.00502500 // Math.pow(@phi, 11);
@phiC: (@phiB * @phi1);      // 0.00310562 // Math.pow(@phi, 12);
@phiD: (@phiC * @phi1);      // 0.00191938 // Math.pow(@phi, 13);
@phiE: (@phiD * @phi1);      // 0.00118624 // Math.pow(@phi, 14);
@phiF: (@phiE * @phi1);      // 0.00073314 // Math.pow(@phi, 15);

@phi1c: (1 - @phi1); // 0.38196601 // @phi2
@phi2c: (1 - @phi2); // 0.61803399 // @phi1
@phi3c: (1 - @phi3); // 0.76393202
@phi4c: (1 - @phi4); // 0.85410197

@golden0: (100% * @phi0);
@golden1: (100% * @phi1);
@golden2: (100% * @phi2);
@golden3: (100% * @phi3);
@golden4: (100% * @phi4);
@golden5: (100% * @phi5);
@golden6: (100% * @phi6);
@golden7: (100% * @phi7);
@golden8: (100% * @phi8);
@golden9: (100% * @phi9);
@goldenA: (100% * @phiA);
@goldenB: (100% * @phiB);
@goldenC: (100% * @phiC);
@goldenD: (100% * @phiD);
@goldenE: (100% * @phiE);
@goldenF: (100% * @phiF);

@golden1c: (100% * @phi1c); // @golden2
@golden2c: (100% * @phi2c); // @golden1
@golden3c: (100% * @phi3c);
@golden4c: (100% * @phi4c);
//---- #end Golden Values ----//
//++++ #end SIZING ++++//
