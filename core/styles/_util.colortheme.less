
/*################################*\
    _colortheme.less
\*################################*/


// Pre-made color themes using Solarized and Lunarized.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-04-08
.t-bg-sol-lite {.SOLLUN(); background: @solarized_lite_bg; border-color: @solarized_lite_brdr;}
.t-bg-sol-dark {.SOLLUN(); background: @solarized_dark_bg; border-color: @solarized_dark_brdr;}
.t-bg-lun-lite {.SOLLUN(); background: @lunarized_lite_bg; border-color: @lunarized_lite_brdr;}
.t-bg-lun-dark {.SOLLUN(); background: @lunarized_dark_bg; border-color: @lunarized_dark_brdr;}
.t-fg-sol-lite {.SOLLUN(); color: @solarized_lite_txt;}
.t-fg-sol-dark {.SOLLUN(); color: @solarized_dark_txt;}
.t-fg-lun-lite {.SOLLUN(); color: @lunarized_lite_txt;}
.t-fg-lun-dark {.SOLLUN(); color: @lunarized_dark_txt;}

// Sub-Components of code:
//
// `.c__Comm` - the HTML Element used for comments (usually `small`)
// `.c__Emph` - the HTML Element used for importance (usually `strong`)
//
// `.c__Ctl`  - programming control (if, for, switch, return)
// `.c__Opr`  - delimiter or operator (+, ==, ., new, this)
// `.c__Kwd`  - predefined keywords (var, function)
// `.c__Cst`  - a number, color, or character constant
// `.c__Str`  - any string
// `.c__Cmd`  - a function name, function call, constructor call, or Less, LaTeX, or JS command
// `.c__Arg`  - argument to a function or constructor call, or a Less, LaTeX, or JS argument
// `.c__Obj`  - a class or object reference
//
// `.c__Tag`  - an HTML tag
// `.c__Atr`  - an HTML attribute
// `.c__Val`  - an HTML or CSS value
// `.c__Sel`  - a CSS selector
// `.c__Prp`  - a CSS property
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-04-08
.c__Comm {
  .SOLLUN();
  .t-fg-sol-lite > & {color: @solarized_lite_comm;}
  .t-fg-sol-dark > & {color: @solarized_dark_comm;}
  .t-fg-lun-lite > & {color: @lunarized_lite_comm;}
  .t-fg-lun-dark > & {color: @lunarized_dark_comm;}
}
.c__Emph {
  .SOLLUN();
  .t-fg-sol-lite > & {color: @solarized_lite_emph;}
  .t-fg-sol-dark > & {color: @solarized_dark_emph;}
  .t-fg-lun-lite > & {color: @lunarized_lite_emph;}
  .t-fg-lun-dark > & {color: @lunarized_dark_emph;}
}

.c__Ctl {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_red;}
  .t-ac-lun & {color: @lunarized_red;}
}
.c__Opr {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_orange;}
  .t-ac-lun & {color: @lunarized_orange;}
}
.c__Kwd {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_yellow;}
  .t-ac-lun & {color: @lunarized_yellow;}
}
.c__Cst {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_green;}
  .t-ac-lun & {color: @lunarized_green;}
}
.c__Str {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_cyan;}
  .t-ac-lun & {color: @lunarized_cyan;}
}
.c__Cmd {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_blue;}
  .t-ac-lun & {color: @lunarized_blue;}
}
.c__Arg {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_violet;}
  .t-ac-lun & {color: @lunarized_indigo;}
}
.c__Obj {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_magenta;}
  .t-ac-lun & {color: @lunarized_violet;}
}
.c__Tag {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_blue;}
  .t-ac-lun & {color: @lunarized_blue;}
}
.c__Atr {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_yellow;}
  .t-ac-lun & {color: @lunarized_yellow;}
}
.c__Val {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_cyan;}
  .t-ac-lun & {color: @lunarized_cyan;}
}
.c__Sel {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_blue;}
  .t-ac-lun & {color: @lunarized_blue;}
}
.c__Prp {
  .SOLLUN();
  .t-ac-sol & {color: @solarized_yellow;}
  .t-ac-lun & {color: @lunarized_yellow;}
}
