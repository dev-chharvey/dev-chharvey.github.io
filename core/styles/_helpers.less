
/*#################*\
    _helpers.less
\*#################*/

// IMPORTANT: The classes in this stylesheet should *ONLY* be used on the `[class]`
// attribute of HTML Elements. Do *NOT* include or mixin these classes in Less. Instead,
// use their definitions. E.g., do not include `.u-w_1o2;` in a Less mixin or class definition;
// just use `width: 50%;`. These classes are meant only to be used as trumps, for quick
// debugging purposes. Note that with a helper such as `[class="u-w_1o2"]` on an Element,
// you cannot change the style of this element on different media types.

// Table of Contents
//
// - WIDTHS
// - SPACING
// - FONTS & TEXT
// - COLORS
//   - Dark Colors
// - BACKGROUND


/*+++++++++++*\
    #WIDTHS
\*+++++++++++*/
// The following helper classes change the width of the Elements that use them.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-02-12
.u-w_p0  {width: @golden0 ;}
.u-w_p1  {width: @golden1 ;}
.u-w_p2  {width: @golden2 ;}
.u-w_p3  {width: @golden3 ;}
.u-w_p4  {width: @golden4 ;}
.u-w_p1c {width: @golden1c;}
.u-w_p2c {width: @golden2c;}
.u-w_p3c {width: @golden3c;}
.u-w_p4c {width: @golden4c;}

.u-w_1o1 {width: @1o1;}
.u-w_1o2 {width: @1o2;}
.u-w_2o2 {width: @2o2;}
.u-w_1o3 {width: @1o3;}
.u-w_2o3 {width: @2o3;}
.u-w_3o3 {width: @3o3;}
.u-w_1o4 {width: @1o4;}
.u-w_2o4 {width: @2o4;}
.u-w_3o4 {width: @3o4;}
.u-w_4o4 {width: @4o4;}
.u-w_1o5 {width: @1o5;}
.u-w_2o5 {width: @2o5;}
.u-w_3o5 {width: @3o5;}
.u-w_4o5 {width: @4o5;}
.u-w_5o5 {width: @5o5;}
.u-w_1o6 {width: @1o6;}
.u-w_2o6 {width: @2o6;}
.u-w_3o6 {width: @3o6;}
.u-w_4o6 {width: @4o6;}
.u-w_5o6 {width: @5o6;}
.u-w_6o6 {width: @6o6;}
//++++ #end WIDTHS ++++//


/*++++++++++++*\
    #SPACING
\*++++++++++++*/
// Defines even horizontal margins on an Object.
// This helper should *ONLY* be used if adding a wrapper Element flex container is not possible.
// Otherwise, on the wrapper Element, use `.u-jc_around` or `.u-jc_center`
// and this block will automatically be centered without needing auto margins.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-02-13
// .margin-even {
//   margin-left:  auto;
//   margin-right: auto;
// }
.u-jc_between {.justify-content(space-between);}
.u-jc_around  {.justify-content(space-around);}
.u-jc_center  {.justify-content(center);}
.u-jc_start   {.justify-content(flex-start);}
.u-jc_end     {.justify-content(flex-end);}
//++++ #end SPACING ++++//


/*+++++++++++++++++*\
    #FONTS & TEXT
\*+++++++++++++++++*/
.u-ff_base    {font-family: @project_font_family_base   ;}
.u-ff_prose   {font-family: @project_font_family_prose  ;}
.u-ff_heading {font-family: @project_font_family_heading;}
.u-ff_accent  {font-family: @project_font_family_accent ;}
.u-ff_code    {font-family: @project_font_family_code   ;}
.u-ff_math    {font-family: @project_font_family_math   ;}
.u-ff_script  {font-family: @project_font_family_script ;}

.u-ta_l {text-align: left;}
.u-ta_r {text-align: right;}
.u-ta_c {text-align: center;}
.u-ta_j {text-align: justify;}

// Outlined lists with different enumeration types.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-05-05
.u-lst_dec0  { list-style-type: decimal-leading-zero; } //  01.  02.  03.
.u-lst_upRom { list-style-type: upper-roman;          } //   I.  II. III.
.u-lst_upAlp { list-style-type: upper-alpha;          } //   A.   B.   C.
.u-lst_dec   { list-style-type: decimal;              } //   1.   2.   3.
.u-lst_loAlp { list-style-type: lower-alpha;          } //   a.   b.   c.
.u-lst_loRom { list-style-type: lower-roman;          } //   i.  ii. iii.
.u-lst_loGrk { list-style-type: lower-greek;          } //   α.   β.   γ.
// .u-lst_Ome { list-style-type: @project_list_type_Ome; }
// .u-lst_Alp { list-style-type: @project_list_type_Alp; }
// .u-lst_Bet { list-style-type: @project_list_type_Bet; }
// .u-lst_Gam { list-style-type: @project_list_type_Gam; }
// .u-lst_Del { list-style-type: @project_list_type_Del; }
// .u-lst_Eps { list-style-type: @project_list_type_Eps; }
// .u-lst_Zet { list-style-type: @project_list_type_Zet; }
//++++ #end FONTS AND TEXT ++++//


/*+++++++++++*\
    #COLORS
\*+++++++++++*/
.darkcolor() {
  color: fadeout(#fff, 25%);
}

/*------------------*\
    #Portal Colors
\*------------------*/
.u-bgc_aperture_white {background-color: @aperture_white;}
.u-bgc_aperture_black {background-color: @aperture_black; .darkcolor();}
.u-bgc_lakesuperior   {background-color: @lakesuperior  ; .darkcolor();}
.u-bgc_facilityabyss  {background-color: @facilityabyss ; .darkcolor();}
.u-bgc_atlas          {background-color: @atlas         ; .darkcolor();}
.u-bgc_pbody          {background-color: @pbody         ;}

.u-bgc_deploying  {background-color: @deploying ; .darkcolor();}
.u-bgc_hereye     {background-color: @hereye    ;}
.u-bgc_neurotoxin {background-color: @neurotoxin;}
.u-bgc_bridges    {background-color: @bridges   ;}
.u-bgc_companion  {background-color: @companion ;}
.u-bgc_vilify     {background-color: @vilify    ; .darkcolor();}

.u-bgc_cavescaves {background-color: @cavescaves; .darkcolor();}
.u-bgc_asbestos   {background-color: @asbestos  ;}
.u-bgc_repulsion  {background-color: @repulsion ;}
.u-bgc_propulsion {background-color: @propulsion;}

.u-bgc_aperture_grey_0o6 {background-color: @aperture_grey_0o6; .darkcolor();}
.u-bgc_aperture_grey_1o6 {background-color: @aperture_grey_1o6; .darkcolor();}
.u-bgc_aperture_grey_2o6 {background-color: @aperture_grey_2o6; .darkcolor();}
.u-bgc_aperture_grey_3o6 {background-color: @aperture_grey_3o6;}
.u-bgc_aperture_grey_4o6 {background-color: @aperture_grey_4o6;}
.u-bgc_aperture_grey_5o6 {background-color: @aperture_grey_5o6;}
.u-bgc_aperture_grey_6o6 {background-color: @aperture_grey_6o6;}
//---- #end Portal Colors ----//

/*-------------------*\
    #Sol/Lun Colors
\*-------------------*/
.u-bgc_solarized_base03  {.SOLLUN(); background-color: @solarized_base03 ; .darkcolor();}
.u-bgc_solarized_base02  {.SOLLUN(); background-color: @solarized_base02 ; .darkcolor();}
.u-bgc_solarized_base01  {.SOLLUN(); background-color: @solarized_base01 ;}
.u-bgc_solarized_base00  {.SOLLUN(); background-color: @solarized_base00 ;}
.u-bgc_solarized_base0   {.SOLLUN(); background-color: @solarized_base0  ;}
.u-bgc_solarized_base1   {.SOLLUN(); background-color: @solarized_base1  ;}
.u-bgc_solarized_base2   {.SOLLUN(); background-color: @solarized_base2  ;}
.u-bgc_solarized_base3   {.SOLLUN(); background-color: @solarized_base3  ;}
.u-bgc_solarized_red     {.SOLLUN(); background-color: @solarized_red    ;}
.u-bgc_solarized_orange  {.SOLLUN(); background-color: @solarized_orange ;}
.u-bgc_solarized_yellow  {.SOLLUN(); background-color: @solarized_yellow ;}
.u-bgc_solarized_green   {.SOLLUN(); background-color: @solarized_green  ;}
.u-bgc_solarized_cyan    {.SOLLUN(); background-color: @solarized_cyan   ;}
.u-bgc_solarized_blue    {.SOLLUN(); background-color: @solarized_blue   ;}
.u-bgc_solarized_violet  {.SOLLUN(); background-color: @solarized_violet ;}
.u-bgc_solarized_magenta {.SOLLUN(); background-color: @solarized_magenta;}

.u-bgc_lunarized_base03  {.SOLLUN(); background-color: @lunarized_base03; .darkcolor();}
.u-bgc_lunarized_base02  {.SOLLUN(); background-color: @lunarized_base02; .darkcolor();}
.u-bgc_lunarized_base01  {.SOLLUN(); background-color: @lunarized_base01;}
.u-bgc_lunarized_base00  {.SOLLUN(); background-color: @lunarized_base00;}
.u-bgc_lunarized_base0   {.SOLLUN(); background-color: @lunarized_base0 ;}
.u-bgc_lunarized_base1   {.SOLLUN(); background-color: @lunarized_base1 ;}
.u-bgc_lunarized_base2   {.SOLLUN(); background-color: @lunarized_base2 ;}
.u-bgc_lunarized_base3   {.SOLLUN(); background-color: @lunarized_base3 ;}
.u-bgc_lunarized_cyan    {.SOLLUN(); background-color: @lunarized_cyan  ;}
.u-bgc_lunarized_blue    {.SOLLUN(); background-color: @lunarized_blue  ;}
.u-bgc_lunarized_indigo  {.SOLLUN(); background-color: @lunarized_indigo;}
.u-bgc_lunarized_violet  {.SOLLUN(); background-color: @lunarized_violet;}
.u-bgc_lunarized_red     {.SOLLUN(); background-color: @lunarized_red   ;}
.u-bgc_lunarized_orange  {.SOLLUN(); background-color: @lunarized_orange;}
.u-bgc_lunarized_yellow  {.SOLLUN(); background-color: @lunarized_yellow;}
.u-bgc_lunarized_green   {.SOLLUN(); background-color: @lunarized_green ;}
//---- #end Sol/Lun Colors ----//

/*-----------------*\
    #Label Colors
\*-----------------*/
// .u-bgc_dang {.LABELS(); background-color: @color_dang; .darkcolor();}
// .u-bgc_cshn {.LABELS(); background-color: @color_cshn; .darkcolor();}
// .u-bgc_skss {.LABELS(); background-color: @color_skss; .darkcolor();}
// .u-bgc_info {.LABELS(); background-color: @color_info; .darkcolor();}
// .u-bgc_help {.LABELS(); background-color: @color_help; .darkcolor();}
//---- #end Label Colors ----//
//++++ #end COLORS ++++//


/*+++++++++++++++*\
    #BACKGROUND
\*+++++++++++++++*/
// The following helpers add background images to an Element, typically the `body` Element.
// `.crossgrid-lined` : simple lined paper
// `.crossgrid-phi`   : lined paper with vertical lines at phi-like intervals
// `.crossgrid-even`  : lined paper with vertical lines at fractions n/m where 1 ≤ m ≤ 6 and 1 ≤ n ≤ m
// `.crossgrid-lcm`   : lined paper with vertical lines at n/60 where 1 ≤ n ≤ 60
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-04-01
.crossgrid-lined {
  background-image: url('https://chharvey.github.io/core/images/crossgrid-lined.svg');
  background-size: 1px 24px;
  background-repeat: repeat;
  background-position: left bottom; // fallback
  // background-position-y: bottom;
}
.crossgrid-phi {
  background-image: url('https://chharvey.github.io/core/images/crossgrid-phi.svg');
  background-size: 100% 24px;
  background-repeat: repeat-y;
}
.crossgrid-even {
  background-image: url('https://chharvey.github.io/core/images/crossgrid-even.svg');
  background-size: 100% 24px;
  background-repeat: repeat-y;
}
.crossgrid-lcm {
  background-image: url('https://chharvey.github.io/core/images/crossgrid-lcm.svg');
  background-size: 100% 24px;
  background-repeat: repeat;
}
//++++ #end BACKGROUND ++++//

// The `newline` Helper class essentially places an Element on a new line.
// This class would be useful if you needed to insert a line break before a list of inline Elements:
// in this case, you would add this class to the Element that starts a new line.
//
// Note: for creating an arbitrary line break not existing between elements, for example,
// in a paragraph, consider using the `br` Element.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-05-10
.h-newline {
  &::before {
    display: block;
    content: '';
  }
}
.h-on-print-newline {
  @media print {
    .h-newline;
  }
}

// This Helper class normalizes an Element on print.
// It is essentially a "reset" in that it gives the Element project-default styles, but only when
// the page is being printed.
// This helper is intended to be overridden by Utility classes. For example,
// if you want an element to be normalized but with text-align right, then you would apply
// this class and then apply class `.u-ta_r`.
// **It is for this reason that Utility classes ("atoms") be defined *after* Helper classes.**
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-05-10
.h-on-print-normalize {
  @media print {
    margin: 0;
    padding: 0;

    font-style: inherit;
    font-weight: inherit;
    font-variant: inherit;
    font-size: inherit;
    line-height: inherit;
    font-family: inherit;

    text-align: inherit;
    text-shadow: inherit;
    color: inherit;
    background: transparent;
  }
}
