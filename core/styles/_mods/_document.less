
/*##################*\
    _document.less
\*##################*/


/**
  * Represents a generic article, technical document, blog post, etc.
  * This class may be added to a literal `article` Element or `main` Element of a page.
  * Designed to contain other block-level Elements such as headings and paragraphs.
@tags
: #typography
: #document
@author
: Chris Harvey
@updated
: 2015-03-09
  */
.Document {
  font-family: @project_font_family_prose;
  text-align: justify;
}

/**
  * The `[data-status]` attribute indicates the status of a document or Element.
  *
  * Use class `.Document--*` to style the document based on its status, or
  * `.Document__*` to style an element based on its status.
  *
  * `draft`    : a work in progress
  * `complete` : finished but still needs edits before releasing
  * `released` : ready for implementation
  *
  * The `[data-informative]` attribute on an Element in a `.Document` indicates that
  * the content is nonessential to the document.
  *
  * Use class `.Document__informative` to style nonessential elements.
  *
  * See https://github.com/chharvey/chharvey.github.io/wiki/Document-Status/ for more info.
@implements
: .box-block()
: .font-size-block()
@tags
: #status
: #border
: #background
@author
: Chris Harvey
@updated
: 2015-03-14
  */
@content_draft:    'This document is a work in progress.';
@content_complete: 'This document is mostly complete.';
@content_released: 'This document is ready for implemen' '\00ad' 'tation.'; // &shy;
.Document--draft::before    {color: #610000; content: @content_draft;}
.Document--complete::before {color: #4e6100; content: @content_complete;}
.Document--released::before {color: #006127; content: @content_released;}
.Document__draft    {color: #610000;}
.Document__complete {color: #4e6100;}
.Document__released {color: #006127;}
.Document__informative {color: #002761;}
@media screen {
  .Document--draft::before,
  .Document--complete::before,
  .Document--released::before {
    // FIXME cannot use AsideGoldenMinor because cannot include classes from inside media queries
    .box-block(0);
    .font-size-block(@project_font_size_sml; @project_line_height);
    display: block;
    width:        @golden5; // @golden1 within a @golden4
    margin-left:  @golden7; // @golden3 within a @golden4
    margin-right: @golden8; // @golden4 within a @golden4
    position: absolute;
    right: 0;
    font-weight: bold;
    font-family: @project_font_family_accent;
    text-align: left;
  }
  .Document--draft::before    {background: #ff9e9e;}
  .Document--complete::before {background: #ecff9e;}
  .Document--released::before {background: #9effc5;}

  .elem-status-screen(@brdrc; @bgc) {
    border-left:  0.25rem solid @brdrc;
    border-right: 0.25rem solid @brdrc;
    background: fadeout(@bgc, 80%);
  }
  .Document__draft,
  .Document__complete,
  .Document__released {
    padding-left:  0.75rem;
    padding-right: 0.75rem;
    margin-left:  1rem;
    margin-right: 1rem;
    box-shadow: 4px 4px 8px #808080;
  }
  .Document__draft    {.elem-status-screen(#f00; #ff9e9e);}
  .Document__complete {.elem-status-screen(#cf0; #ecff9e);}
  .Document__released {.elem-status-screen(#0f6; #9effc5);}

  .Document__informative {
    border-left:  0.125rem solid #06f;
    border-right: 0.125rem solid #06f;
    padding-left:  0.375rem;
    padding-right: 0.375rem;
    margin-left:  0.5rem;
    margin-right: 0.5rem;
    box-shadow: 2px 2px 4px #c0c0c0;
    font-family: @project_font_family_base;
    background: fadeout(#9ec5ff, 80%);
  }
}
@media print {
  .Document--draft::before    {}
  .Document--complete::before {}
  .Document--released::before {}
  .Document__draft    {}
  .Document__complete {}
  .Document__released {}
  .Document__informative {.parens();}
}
