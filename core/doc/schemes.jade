doctype html
html(lang="en" xmlns="http://www.w3.org/1999/xhtml")
  head
    title Site Schemes &in; Site Design
    meta(charset="utf-8")
    link(rel="stylesheet" href="../../styles/chharvey.css")
    style.
      body {
        color: #000;
        background-color: #fff;
      }

      .this-c-FontDemo {
        margin-bottom: 1.5rem;
      }
      .this-c-FontDemo::after {
        content: '';
        display: block;
        border-bottom: 0.25rem solid #cbcfd4;
        margin-top: -0.25rem;
        position: relative;
        top: 0.75rem;
      }
      .ColorTitle {
        font-weight: 600;
        text-align: center;
        font-size: 1.25rem;
        line-height: 1.2;
      }
      .ColorRelation {
        font-style: italic;
        opacity: 0.5;
        quotes: '(' ')';
      }
      .ColorRelation::before {content: open-quote;}
      .ColorRelation::after  {content: close-quote;}
      form {
        padding: 1.5rem 1rem;
        margin-bottom: 1.5rem;
      }
      fieldset {
        margin: 0;
      }
      #syntax-example, #syntax-example * {
        transition-property: border-color, color, background-color;
        transition-duration: 250ms;
        transition-timing-function: ease;
        transition-delay: 0ms;
      }
      /* Some background colors are dark, so a light translucent foreground color has been added. */
      .h-darkbg {
        color: rgba(255, 255, 255, 0.8);
      }
  body.o-GoldenContainer
    main.o-GoldenContainer__Content
      h1 Site-Wide Schemes
      section#fonts
        h2 Font Scheme
        form.o-FlexContainer
          p(class="!w:1o1").
            Check the radio buttons to change the style, variant, and weight of the font demos below.
          fieldset(class="!w:1o1")
            legend font style and variant
            ul.o-FlexContainer
              li(class="!w:1o2")
                input#check-fs(type="checkbox" name="fs" value="italic")
                label(for="check-fs") font-style: italic;
              li(class="!w:1o2")
                input#check-fv(type="checkbox" name="fv" value="small-caps")
                label(for="check-fv") font-variant: small-caps;
          fieldset(class="!w:1o1")
            legend font-weight
            ul.o-FlexContainer
              li
                input#check-fw-100(type="radio" name="fw" value="100")
                label(for="check-fw-100") 100
              li
                input#check-fw-200(type="radio" name="fw" value="200")
                label(for="check-fw-200") 200
              li
                input#check-fw-300(type="radio" name="fw" value="300")
                label(for="check-fw-300") 300
              li
                input#check-fw-400(type="radio" name="fw" value="400" checked="")
                label(for="check-fw-400") 400 (normal (default))
              li
                input#check-fw-500(type="radio" name="fw" value="500")
                label(for="check-fw-500") 500
              li
                input#check-fw-600(type="radio" name="fw" value="600")
                label(for="check-fw-600") 600
              li
                input#check-fw-700(type="radio" name="fw" value="700")
                label(for="check-fw-700") 700 (bold)
              li
                input#check-fw-800(type="radio" name="fw" value="800")
                label(for="check-fw-800") 800
              li
                input#check-fw-900(type="radio" name="fw" value="900")
                label(for="check-fw-900") 900
          input#reset-fonts(type="reset")
        section.this-c-FontDemo.u-ff_base
          p.
            The base font-family is used for the main body copy.
            It is a sans-serif type with little to no thick/thin transition.
            Being a sans-serif, its #[i italic] is actually an oblique, which just slants the glyphs.
            Suggested typefaces include #[b Avenir Next], #[b Helvetica Neue].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_heading
          p.
            The heading font-family is used only for headings of body copy (not table headings,
            #[i(lang="la"): abbr(title="et cetera") etc.]).
            It is a sans-serif polyweight type with a moderate thick/thin transition.
            Because of this, it goes well with both monoweight types and serif types, which makes it perfect for headings.
            Suggested typefaces include #[b Optima], #[b Seravek], #[b Tahoma].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_prose
          p.
            The prose font-family is used for text in formal documents and articles.
            It is a serif oldstyle type, which is easy on the eyes and can be read at extensive length.
            Like the #[i heading] font family, it, too, has a moderate thick/thin transition, but has diagonal stress and
            serifs, and true italics, which means it uses a whole new set of glyphs.
            Suggested typefaces include #[b Baskerville], #[b Palatino], #[b Cochin].#[sup: a.Rf#rf-baskerville(rel="this" href="#fn-baskerville") 1]
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_accent
          p.
            The accent font-family is used for typographical and #[abbr(title="user interface") UI]
            components such as ledes, pull quotes, captions, alerts, labels, buttons, and keys.
            Like the #[i base] font-family, it is a monoweight sans-serif, yet slightly heavier.
            Suggested typefaces include #[b Helvetica Neue], #[b Helvetica].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_code
          p.
            The code font-family is a monospace type used for&hellip; well, code. Personally, I dislike
            monospace fonts with serifs, so this family is sans-serif.
            Suggested typefaces include #[b Menlo], #[b Monaco], #[b Andale Mono].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_math
          p.
            The math font-family is a serif modern type use for mathematical spans and spans in foreign
            languages. It has a radical
            thick/thin transition, vertical stress, and straight horizontal serifs. With a cold yet
            elegant look, this font family makes long spans of text
            hard to read, but that&rsquo;s okay because this font is used only for short expressions.
            Suggested typefaces include #[b Didot], #[b Bodoni 72], #[b Times].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        section.this-c-FontDemo.u-ff_script(style="line-height: 3.0;")
          p.
            The script font-family is used for very fancy elements such as drop-caps and subheadings. Use
            this font family sparingly.
            Suggested typefaces include #[b Zapfino].
          figure.crossgrid-lined: p The quick brown fox jumps over the lazy dog.
        footer
          ul.c-ListFootnotes
            li.
              #[sup: a.Fn#fn-baskerville(rel="this" href="#rf-baskerville") 1]
              #[b Baskerville], though considered an #[b oldstyle] type, actually has
              a straight, vertical stress, which is typically a feature of #[b modern] types.
              However #[b Palatino] and #[b Cochin] indeed have diagonal stresses.
      section
        h2 Portal Color Scheme
        footer.
          This color scheme is based on the
          #[a(rel="external" href="http://www.thinkwithportals.com/"): cite Portal] video game series.
        section
          h3 Main Portal Colors
          dl.o-FlexContainer
            dt.o-Box.ColorTitle.u-bgc_aperture_white(class="!w:1o2 !xo:0") Aperture White
            dd.o-Box.ColorDescr.u-bgc_aperture_white(class="!w:1o2 !xo:1")
              p.
                The purity of Aperture Science in all its glory. This dazzling
                brilliance of bluish light seen on the portalable panels coated with
                Conversion Gel makes the background emit an eerie glow, like the full moon.
              ul
                li body background
            dt.o-Box.ColorTitle.u-bgc_aperture_black(class="!w:1o2 !xo:0").h-darkbg Aperture Black
            dd.o-Box.ColorDescr.u-bgc_aperture_black(class="!w:1o2 !xo:1").h-darkbg
              p.
                The polar opposite of Aperture White. Representing the true dark nature
                of the Enrichment Center, this is the color of the panels that inhibit
                portals. A hint of orange is infinitesimally noticeable. What better way to
                complement the background color than the color of normal text?
              ul
                li body text
            dt.o-Box.ColorTitle.u-bgc_lakesuperior(class="!w:1o2 !xo:1").h-darkbg Lake Superior
            dd.o-Box.ColorDescr.u-bgc_lakesuperior(class="!w:1o2 !xo:2").h-darkbg
              p.
                This Great Lake borders #[a Ontonagon, MI], the location of the
                Aperture Science Enrichment Center. A perfect fit for superior headings on
                a page.
              ul
                li major heading text
                li ledes and drop caps
            dt.o-Box.ColorTitle.u-bgc_facilityabyss(class="!w:1o2 !xo:1").h-darkbg Facility Abyss
            dd.o-Box.ColorDescr.u-bgc_facilityabyss(class="!w:1o2 !xo:2").h-darkbg
              p.
                This color can be seen in the endless depths of the subterranean
                Enrichment Center. This color is for #[i minor] headings of a page.
              ul
                li minor heading text
            dt.o-Box.ColorTitle.u-bgc_atlas(class="!w:1o2 !xo:2").h-darkbg Atlas
            dd.o-Box.ColorDescr.u-bgc_atlas(class="!w:1o2 !xo:3").h-darkbg
              p.
                Short and stout, Atlas is one of the two robots used for testing.
                Untouched hyperlinks are dedicated to his digital iris.
              ul
                li link text
            dt.o-Box.ColorTitle.u-bgc_pbody(class="!w:1o2 !xo:2") P-Body
            dd.o-Box.ColorDescr.u-bgc_pbody(class="!w:1o2 !xo:3")
              p.
                Tall and wiry, P-body is one of the two robots used for testing.
                Hovered hyperlinks are dedicated to his (or her?) digital iris.
              ul
                li hover link text
        section
          h3 UI Component Colors
          dl.o-FlexContainer
            dt.o-Box.ColorTitle.u-bgc_deploying(class="!w:1o2 !xo:0").h-darkbg Deploying
            dd.o-Box.ColorDescr.u-bgc_deploying(class="!w:1o2 !xo:1").h-darkbg
              p.
                The one word you never want to hear without a portal gun. Just as the
                iris of a Sentry Turret, this color is briefly seen, providing a subtle accent
                on the site.
              ul
                li Danger components
            dt.o-Box.ColorTitle.u-bgc_hereye(class="!w:1o2 !xo:0") HER Eye
            dd.o-Box.ColorDescr.u-bgc_hereye(class="!w:1o2 !xo:1")
              p.
                This color alone will scare the
                prokaryotic-microorganism-infested-fecal-matter out of you. See where you can
                find it. You monster.
              ul
                li Caution components
            dt.o-Box.ColorTitle.u-bgc_neurotoxin(class="!w:1o2 !xo:1") Neurotoxin
            dd.o-Box.ColorDescr.u-bgc_neurotoxin(class="!w:1o2 !xo:2")
              p.
                Long ago an #[i accident] resulted in the unleashing of
                this deadly vapor and the murdering of the entire human staff of
                Aperture Laboratories. Some say it could happen again, but this time on the
                test subjects&hellip;
              ul
                li Success components
            dt.o-Box.ColorTitle.u-bgc_bridges(class="!w:1o2 !xo:1") Bridges of Light
            dd.o-Box.ColorDescr.u-bgc_bridges(class="!w:1o2 !xo:2")
              p.
                Hard Light Bridges are literally massless, yet they can sustain
                infinite weight, as Chell can attest to.
              ul
                li Info components
            dt.o-Box.ColorTitle.u-bgc_companion(class="!w:1o2 !xo:2") Heart of a Companion
            dd.o-Box.ColorDescr.u-bgc_companion(class="!w:1o2 !xo:3")
              p.
                Believed to be sentient by some and alive by others, the
                Weighted Companion Cube has been said to provide advice and display emotions
                such as brevity, care, and love. It is even believed to hum opera when near
                a friend. A perfect color for helpful elements on a Web page.
              ul
                li Help components
            dt.o-Box.ColorTitle.u-bgc_vilify(class="!w:1o2 !xo:2").h-darkbg Vilify
            dd.o-Box.ColorDescr.u-bgc_vilify(class="!w:1o2 !xo:3").h-darkbg
              p: q(class="!fs:t" cite="https://www.youtube.com/watch?v=G-Vg2YS-sFE").
                You&rsquo;ve
                got sucker&rsquo;s luck. Have you given up? Does it feel
                like a trial? Does it trouble your mind the way you trouble mine?
        section
          h3 More Portal Colors
          dl.o-FlexContainer
            dt.o-Box.ColorTitle.u-bgc_cavescaves(class="!w:1o2 !xo:0").h-darkbg Cave&rsquo;s Caves
            dd.o-Box.ColorDescr.u-bgc_cavescaves(class="!w:1o2 !xo:1").h-darkbg
              p.
                Cave&rsquo;s underground salt mines were the ideal venue for early
                test chambers.
            dt.o-Box.ColorTitle.u-bgc_asbestos(class="!w:1o2 !xo:0") Asbestos
            dd.o-Box.ColorDescr.u-bgc_asbestos(class="!w:1o2 !xo:1")
              p.
                The forgotten underground test chambers are ridden with this harmful
                substance. Or so Mr.&nbsp;Johnson says.
            dt.o-Box.ColorTitle.u-bgc_repulsion(class="!w:1o2 !xo:1") Repulsion Gel
            dd.o-Box.ColorDescr.u-bgc_repulsion(class="!w:1o2 !xo:2")
              p.
                Good news, you&rsquo;re not part of the control group; you get the gel.
                Bad news, it does #[em not] like the human skeleton. Turns out you might
                just break every bone in your legs anyway.
              ul
                li code/kbd/samp on print
            dt.o-Box.ColorTitle.u-bgc_propulsion(class="!w:1o2 !xo:1") Propulsion Gel
            dd.o-Box.ColorDescr.u-bgc_propulsion(class="!w:1o2 !xo:2")
              p. #[i Forwarding] the cause of science.
              ul
                li subheading text
        section
          h3 Grey Tones
          dl.o-FlexContainer
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_0o6(class="!w:1o2 !xo:0      ").h-darkbg Aperture Grey 0/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_0o6(class="!w:1o2 !xo:1      ").h-darkbg #[p.ColorRelation Aperture Black]
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_1o6(class="!w:1o2 !xo:2      ").h-darkbg Aperture Grey 1/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_1o6(class="!w:1o2 !xo:3 !pa:0").h-darkbg
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_2o6(class="!w:1o2 !xo:4      ").h-darkbg Aperture Grey 2/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_2o6(class="!w:1o2 !xo:5 !pa:0").h-darkbg
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_3o6(class="!w:1o1 !xo:6      ")          Aperture Grey 3/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_3o6(class="!w:1o1 !xo:6 !pa:0")
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_4o6(class="!w:1o2 !xo:4      ")          Aperture Grey 4/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_4o6(class="!w:1o2 !xo:5 !pa:0")
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_5o6(class="!w:1o2 !xo:2      ")          Aperture Grey 5/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_5o6(class="!w:1o2 !xo:3 !pa:0")
            dt.o-Box.ColorTitle.u-bgc_aperture_grey_6o6(class="!w:1o2 !xo:0      ")          Aperture Grey 6/6
            dd.o-Box.ColorDescr.u-bgc_aperture_grey_6o6(class="!w:1o2 !xo:1      ")          #[p.ColorRelation Aperture White]
      section
        h2 Code Color Scheme
        p.
          The Solarized and Lunarized color schemes are mainly used for displaying computer code, though
          they could be applied anywhere. Each scheme
          has a set of 8 bases and 8 accents. The bases are dull tones for background, foreground, and
          border colors, and these bases will change depending on whether the theme is
          Dark or Light. On the other hand, the accents are sharp tones used for syntax highlighting,
          and do not change based on the theme.
        p.
          On this site, code blocks have a Lunarized Light background with a Solarized Light foreground
          and Solarized Accents for syntax highlighting. Inline code uses a Solarized Light background
          with a Lunarized Light foreground, but does not use
          syntax highlighting. (If it did, it would probably use Lunarized Accents.)
        p.
          Credit is due to
          #[a(rel="external" href="http://ethanschoonover.com/solarized") Ethan Schoonover (&copy; #[time 2011])]
          for developing the Solarized Scheme.
        p.
          Inspired by his work, I developed the Lunarized Scheme in an attempt to cool the Solarized Light
          background colors. I liked the idea of using a Light theme but I didn&rsquo;t want a yellowish
          tint. In the Lunarized Scheme, the bases are inverses of the Solarized Bases while the accents
          are complements of the Solarized Accents#[sup: a.Rf#rf-color(rel="this" href="#fn-color") 1].
          Then there&rsquo;s the added bonus of its name being based off of the Moon, which is an
          integral part of #[cite Portal] gameplay.
        footer
          ul.c-ListFootnotes
            li
              p.
                #[sup: a.Fn#fn-color(rel="this" href="#rf-color") 1]
                The #[dfn inverse] of a color is that color with a hue rotation of 180&deg;, while
                the #[dfn complement] of a color is the difference between that color and white.
              pre.
                inverse(@color)    : spin(@color, 180);
                complement(@color) : rgb( 255 - red(@color), 255 - green(@color), 255 - blue(@color) );
        section
          h3 #[cite Solarized] Color Scheme
          dl.o-FlexContainer
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:0 !bc:s03").h-darkbg Solarized Base03
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:1 !bc:s03").h-darkbg
              ul
                li dark code background
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:0 !bc:s3") Solarized Base3
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:1 !bc:s3")
              ul
                li light code background
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:1 !bc:s02").h-darkbg Solarized Base02
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:2 !bc:s02").h-darkbg
              ul
                li dark code border
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:1 !bc:s2") Solarized Base2
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:2 !bc:s2")
              ul
                li light code border
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:2 !bc:s01") Solarized Base01
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:3 !bc:s01")
              ul
                li light code emphasis
                li dark code comment
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:2 !bc:s1") Solarized Base1
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:3 !bc:s1")
              ul
                li light code comment
                li dark code emphasis
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:3 !bc:s00") Solarized Base00
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:4 !bc:s00")
              ul
                li light code text
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:3 !bc:s0") Solarized Base0
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:4 !bc:s0")
              ul
                li dark code text
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:4 !bc:sr") Solarized Red
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:5 !bc:sr")
              ul
                li programming control (#[code if], #[code for], #[code switch], #[code return])
                li other control (#[code public], #[code private], #[code static])
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:4 !bc:sc") Solarized Cyan
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:5 !bc:sc")
              ul
                li HTML attribute values
                li CSS property values
                li strings (except in CSS#[sup: a.Rf#rf-cssstring(rel="this" href="#fn-cssstring") 2])
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:5 !bc:so") Solarized Orange
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:6 !bc:so")
              ul
                li delimiters and operators (#[code +], #[code ==], #[code .], #[code new], #[code typeof])
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:5 !bc:sb") Solarized Blue
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:6 !bc:sb")
              ul
                li HTML tags
                li CSS/Less class selectors
                li JS function definitions and function calls
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:6 !bc:sy") Solarized Yellow
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:7 !bc:sy")
              ul
                li HTML attribute names
                li CSS property names
                li pre-defined keywords and types (#[code var], #[code function], #[code int], #[code class])
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:6 !bc:sv") Solarized Violet
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:7 !bc:sv")
              ul
                li variable names
                li function arguments
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:7 !bc:sg") Solarized Green
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:8 !bc:sg")
              ul
                li HTML characters and entities
                li CSS numeric values with units
                li constant values (numbers, colors, booleans, #[code null])
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:7 !bc:sm") Solarized Magenta
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:8 !bc:sm")
              ul
                li string delimiters (#[code &quot;] and #[code &apos;])
                li #[sup: a.Fn#fn-cssstring(rel="this" href="#rf-cssstring") 2]CSS strings
                li object/class/function references (custom, built-in, #[code this], #[code prototype], #[code String], #[code Array])
        section
          h3 #[i Lunarized] Color Scheme
          dl.o-FlexContainer
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:0 !bc:l03").h-darkbg Lunarized Base03
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:1 !bc:l03").h-darkbg
              p.ColorRelation inverse of Solarized Base 03
              ul
                li dark code background
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:0 !bc:l3") Lunarized Base3
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:1 !bc:l3")
              p.ColorRelation inverse of Solarized Base 3
              ul
                li light code background
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:1 !bc:l02").h-darkbg Lunarized Base02
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:2 !bc:l02").h-darkbg
              p.ColorRelation inverse of Solarized Base 02
              ul
                li dark code border
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:1 !bc:l2") Lunarized Base2
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:2 !bc:l2")
              p.ColorRelation inverse of Solarized Base 2
              ul
                li light code border
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:2 !bc:l01") Lunarized Base01
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:3 !bc:l01")
              p.ColorRelation inverse of Solarized Base 01
              ul
                li light code emphasis
                li dark code comment
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:2 !bc:l1") Lunarized Base1
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:3 !bc:l1")
              p.ColorRelation inverse of Solarized Base 1
              ul
                li light code comment
                li dark code emphasis
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:3 !bc:l00") Lunarized Base00
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:4 !bc:l00")
              p.ColorRelation inverse of Solarized Base 00
              ul
                li light code text
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:3 !bc:l0") Lunarized Base0
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:4 !bc:l0")
              p.ColorRelation inverse of Solarized Base 0
              ul
                li dark code text
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:4 !bc:lc") Lunarized Cyan
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:5 !bc:lc"): p.ColorRelation complement of Solarized Red
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:4 !bc:lr") Lunarized Red
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:5 !bc:lr"): p.ColorRelation complement of Solarized Cyan
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:5 !bc:lb") Lunarized Blue
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:6 !bc:lb"): p.ColorRelation complement of Solarized Orange
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:5 !bc:lo") Lunarized Orange
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:6 !bc:lo"): p.ColorRelation complement of Solarized Blue
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:6 !bc:li") Lunarized Indigo
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:7 !bc:li"): p.ColorRelation complement of Solarized Yellow
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:6 !bc:ly") Lunarized Yellow
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:7 !bc:ly"): p.ColorRelation complement of Solarized Violet
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:7 !bc:lv") Lunarized Violet
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:8 !bc:lv"): p.ColorRelation complement of Solarized Green
            dt.o-Box.ColorTitle(class="!w:1o2 !xo:7 !bc:lg") Lunarized Green
            dd.o-Box.ColorDescr(class="!w:1o2 !xo:8 !bc:lg"): p.ColorRelation complement of Solarized Magenta
        section
          h3 Interactive Example
          form.o-FlexContainer
            p.
              Check the radio buttons to add/remove classes to the #[code pre] Element below,
              which will change its color theme.
            fieldset(class="!w:1o3")
              legend Backgrounds
              ul
                li
                  input#check-t-bg-sol-lite(type="radio" name="bg" value="t-bg-sol-lite")
                  label(for="check-t-bg-sol-lite") t-bg-sol-lite
                li
                  input#check-t-bg-sol-dark(type="radio" name="bg" value="t-bg-sol-dark")
                  label(for="check-t-bg-sol-dark") t-bg-sol-dark
                li
                  input#check-t-bg-lun-lite(type="radio" name="bg" value="t-bg-lun-lite" checked="")
                  label(for="check-t-bg-lun-lite") t-bg-lun-lite (default)
                li
                  input#check-t-bg-lun-dark(type="radio" name="bg" value="t-bg-lun-dark")
                  label(for="check-t-bg-lun-dark") t-bg-lun-dark
            fieldset(class="!w:1o3")
              legend Foregrounds
              ul
                li
                  input#check-t-fg-sol-lite(type="radio" name="fg" value="t-fg-sol-lite" checked="")
                  label(for="check-t-fg-sol-lite") t-fg-sol-lite (default)
                li
                  input#check-t-fg-sol-dark(type="radio" name="fg" value="t-fg-sol-dark")
                  label(for="check-t-fg-sol-dark") t-fg-sol-dark
                li
                  input#check-t-fg-lun-lite(type="radio" name="fg" value="t-fg-lun-lite")
                  label(for="check-t-fg-lun-lite") t-fg-lun-lite
                li
                  input#check-t-fg-lun-dark(type="radio" name="fg" value="t-fg-lun-dark")
                  label(for="check-t-fg-lun-dark") t-fg-lun-dark
            fieldset(class="!w:1o3")
              legend Accents
              ul
                li
                  input#check-default(type="radio" name="ac" value="" checked="")
                  label(for="check-default") none (default)
                li
                  input#check-t-ac-sol(type="radio" name="ac" value="t-ac-sol")
                  label(for="check-t-ac-sol") t-ac-sol
                li
                  input#check-t-ac-lun(type="radio" name="ac" value="t-ac-lun")
                  label(for="check-t-ac-lun") t-ac-lun
            input#reset-pre(type="reset")
          pre#syntax-example.
            <span class="c__Kwd">function</span> <span class="c__Cmd">Person(<span class="c__Arg">name</span>)</span> { <small class="c__Comm">// constructor for class `Person`</small>
              <span class="c__Obj">this</span>.greet = <span class="c__Str">'hello!'</span>;
            }
            <span class="c__Kwd">function</span> <span class="c__Cmd">TestSubject(<span class="c__Arg">name, adopted</span>)</span> { <small class="c__Comm">// constructor for class `TestSubject`</small>
              <span class="c__Obj">Person</span>.<span class="c__Cmd">call(<span class="c__Arg"><span class="c__Obj">this</span>, name, adopted</span>)</span>; <small class="c__Comm">// calls the parent constructor</small>
              <span class="c__Ctl">if (<span class="c__Opr">typeof</span> <span class="c__Arg">adopted</span> <span class="c__Opr">==</span> <span class="c__Str">'boolean'</span>)</span>
                <span class="c__Obj">this.</span>is_adopted = <span class="c__Arg">adopted</span>;
              <strong class="c__Emph"><span class="c__Ctl">else</span>  <span class="c__Obj">this.</span>is_adopted = <span class="c__Cst">false</span>;</strong>
            }
            <span class="c__Obj">Util</span>.<span class="c__Cmd">extend(<span class="c__Arg"><span class="c__Obj">TestSubject</span>, <span class="c__Obj">Person</span></span>)</span>; <small class="c__Comm">// extends `TestSubject` from `Person`</small>
            <span class="c__Kwd">var</span> you = <span class="c__Opr">new</span> <span class="c__Cmd">TestSubject(<span class="c__Arg"><span class="c__Str">'Chell'</span>, <span class="c__Cst">true</span></span>)</span>; <small class="c__Comm">// creates an instance of `TestSubject`</small>

            <small class="c__Comm">small.c__Comm  (comment)</small>
            <strong class="c__Emph">strong.c__Emph (importance)</strong>

            <span class="c__Ctl">.c__Ctl  (control)</span>                   <span class="c__Tag">.c__Tag  (HTML tag)</span>
            <span class="c__Opr">.c__Opr  (delimiter/operator)</span>        <span class="c__Atr">.c__Atr  (HTML attribute)</span>
            <span class="c__Kwd">.c__Kwd  (keyword/type)</span>              <span class="c__Val">.c__Val  (HTML/CSS value)</span>
            <span class="c__Cst">.c__Cst  (constant)</span>                  <span class="c__Sel">.c__Sel  (CSS selector)</span>
            <span class="c__Str">.c__Str  (string)</span>                    <span class="c__Prp">.c__Prp  (CSS property)</span>
            <span class="c__Cmd">.c__Cmd  (command/function)</span>
            <span class="c__Arg">.c__Arg  (argument/variable)</span>
            <span class="c__Obj">.c__Obj  (object)</span>
          pre.
            <span class="c__Kwd">function</span> <span class="c__Cmd">Person(<span class="c__Arg">name</span>)</span> { <small>// constructor for class `Person`</small>
              <span class="c__Obj">this</span>.greet = <span class="c__Str">'hello!'</span>;
            }
            <span class="c__Kwd">function</span> <span class="c__Cmd">TestSubject(<span class="c__Arg">name, adopted</span>)</span> { <small>// constructor for class `TestSubject`</small>
              <span class="c__Obj">Person</span>.<span class="c__Cmd">call(<span class="c__Arg"><span class="c__Obj">this</span>, name, adopted</span>)</span>; <small>// calls the parent constructor</small>
              <span class="c__Ctl">if (<span class="c__Opr">typeof</span> <span class="c__Arg">adopted</span> <span class="c__Opr">==</span> <span class="c__Str">'boolean'</span>)</span>
                <span class="c__Obj">this.</span>is_adopted = <span class="c__Arg">adopted</span>;
              <strong><span class="c__Ctl">else</span>  <span class="c__Obj">this.</span>is_adopted = <span class="c__Cst">false</span>;</strong>
            }
            <span class="c__Obj">Util</span>.<span class="c__Cmd">extend(<span class="c__Arg"><span class="c__Obj">TestSubject</span>, <span class="c__Obj">Person</span></span>)</span>; <small>// extends `TestSubject` from `Person`</small>
            <span class="c__Kwd">var</span> you = <span class="c__Opr">new</span> <span class="c__Cmd">TestSubject(<span class="c__Arg"><span class="c__Str">'Chell'</span>, <span class="c__Cst">true</span></span>)</span>; <small>// creates an instance of `TestSubject`</small>
      section
        h2 Table Color Scheme
        p Table rows, columns, or cells are colored based on their position in the table.
        section.o-Box
          h4 Table Row Background High
          ul: li rows/cols in table header/footer
        section.o-Box
          h4 Table Row Background Medium
          ul: li odd rows/cols in table body
        section.o-Box
          h4 Table Row Background Low
          ul: li even rows/cols in table body
        section.o-Box
          h4 Table Row Background Hover
          ul: li rows/cols on hover in table body
    nav.Bc
      ol.Anc
        li: a.Crumb(rel="top   " href="../../index.html   ") Home
        li: a.Crumb(rel="parent" href="../../home/web.html") Web
      ul.Sib
        li: a.Crumb(rel="sibling" href="typo.html     ") Typography
        li: a.Crumb(rel="sibling" href="objects.html  ") Objects
        li: a.Crumb(rel="sibling" href="comp-typo.html") Typo Components
        li: a.Crumb(rel="sibling" href="comp-ui.html  ") UI Components
        li: a.Crumb(rel="this   " href="schemes.html  ") Site Schemes
      ul.Child
    script(src="../../bower_components/jquery/dist/jquery.js")
    script(src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML,https://chharvey.github.io/chhlib/mathjax-localconfig.js")
    script(src="../scripts/global.js")
    script.
      var pre = $('#syntax-example')
      $('input[name="bg"]').change(function () {
        pre.removeClass('t-bg-sol-lite t-bg-sol-dark t-bg-lun-lite t-bg-lun-dark')
        if (this.checked) { pre.addClass($(this).val()) }
      })
      $('input[name="fg"]').change(function () {
        pre.removeClass('t-fg-sol-lite t-fg-sol-dark t-fg-lun-lite t-fg-lun-dark')
        if (this.checked) { pre.addClass($(this).val()) }
      })
      $('input[name="ac"]').change(function () {
        pre.removeClass('t-ac-sol t-ac-lun')
        if (this.checked) { pre.addClass($(this).val()) }
      })
      $('#reset-pre').click(function () {
        pre.removeClass()
      })

      var fontdemo = $('.this-c-FontDemo')
      $('input[name="fs"]').change(function () {
        fontdemo.css('font-style', (this.checked) ? $(this).val() : '')
      })
      $('input[name="fv"]').change(function () {
        fontdemo.css('font-variant', (this.checked) ? $(this).val() : '')
      })
      $('input[name="fw"]').change(function () {
        fontdemo.css('font-weight', (this.checked) ? $(this).val() : '')
      })

      $('#reset-fonts').click(function () {
        fontdemo.css('font-style', '').css('font-variant','').css('font-weight', '')
      })
