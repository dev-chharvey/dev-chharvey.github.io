@import (reference) url('../../node_modules/lux-nox/lux-nox.less');
@import (reference) url('__settings.less');

/*################################*\
    chharvey  |  _trumps.shame.less
\*################################*/


// See <http://csswizardry.com/2013/04/shame-css/>. enough said.

///////////////////////////////////////////////////////////////////////////////


// // Solarized Light Theme
// @chh_color_sol_lite_bg:   @solar_base3;
// @chh_color_sol_lite_brdr: @solar_base2;
// @chh_color_sol_lite_txt:  @solar_base00;
// @chh_color_sol_lite_comm: @solar_base1;
// @chh_color_sol_lite_emph: @solar_base01;
// // Solarized Dark Theme
// @chh_color_sol_dark_bg:   @solar_base03;
// @chh_color_sol_dark_brdr: @solar_base02;
// @chh_color_sol_dark_txt:  @solar_base0;
// @chh_color_sol_dark_comm: @solar_base01;
// @chh_color_sol_dark_emph: @solar_base1;
// // Lunarized Light Theme
// @chh_color_lun_lite_bg:   @lunar_base3;
// @chh_color_lun_lite_brdr: @lunar_base2;
// @chh_color_lun_lite_txt:  @lunar_base00;
// @chh_color_lun_lite_comm: @lunar_base1;
// @chh_color_lun_lite_emph: @lunar_base01;
// // Lunarized Dark Theme
// @chh_color_lun_dark_bg:   @lunar_base03;
// @chh_color_lun_dark_brdr: @lunar_base02;
// @chh_color_lun_dark_txt:  @lunar_base0;
// @chh_color_lun_dark_comm: @lunar_base01;
// @chh_color_lun_dark_emph: @lunar_base1;

// Pre-made color themes using Solarized and Lunarized.
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-04-08
.t-bg-sol-lite { background: @solar_base3 ; border-color: @solar_base2 ; }
.t-bg-sol-dark { background: @solar_base03; border-color: @solar_base02; }
.t-bg-lun-lite { background: @lunar_base3 ; border-color: @lunar_base2 ; }
.t-bg-lun-dark { background: @lunar_base03; border-color: @lunar_base02; }
.t-fg-sol-lite { color: @solar_base00; }
.t-fg-sol-dark { color: @solar_base0 ; }
.t-fg-lun-lite { color: @lunar_base00; }
.t-fg-lun-dark { color: @lunar_base0 ; }

// Sub-Components of code:
//
// `.c__Comm` - the HTML Element used for comments (usually `small`)
// `.c__Emph` - the HTML Element used for importance (usually `strong`)
//
// `.c__Ctl`  - programming control (if, for, switch, return)
// `.c__Opr`  - delimiter or operator (+, ==, ., new, this)
// `.c__Kwd`  - predefined keywords (var, function)
// `.c__Cst`  - a number, color, or character constant
// `.c__Str`  - any string
// `.c__Cmd`  - a function name, function call, constructor call, or Less, LaTeX, or JS command
// `.c__Arg`  - argument to a function or constructor call, or a Less, LaTeX, or JS argument
// `.c__Obj`  - a class or object reference
//
// `.c__Tag`  - an HTML tag
// `.c__Atr`  - an HTML attribute
// `.c__Val`  - an HTML or CSS value
// `.c__Sel`  - a CSS selector
// `.c__Prp`  - a CSS property
//
// ^author
// : Chris Harvey
// ^updated
// : 2015-04-08
.c__Comm {
  .t-fg-sol-lite > & { color: @solar_base1 ; }
  .t-fg-sol-dark > & { color: @solar_base01; }
  .t-fg-lun-lite > & { color: @lunar_base1 ; }
  .t-fg-lun-dark > & { color: @lunar_base01; }
}
.c__Emph {
  .t-fg-sol-lite > & { color: @solar_base01; }
  .t-fg-sol-dark > & { color: @solar_base1 ; }
  .t-fg-lun-lite > & { color: @lunar_base01; }
  .t-fg-lun-dark > & { color: @lunar_base1 ; }
}

.c__Ctl {
  .t-ac-sol & { color: @solar_red; }
  .t-ac-lun & { color: @lunar_red; }
}
.c__Opr {
  .t-ac-sol & { color: @solar_orange; }
  .t-ac-lun & { color: @lunar_orange; }
}
.c__Kwd {
  .t-ac-sol & { color: @solar_yellow; }
  .t-ac-lun & { color: @lunar_yellow; }
}
.c__Cst {
  .t-ac-sol & { color: @solar_green; }
  .t-ac-lun & { color: @lunar_green; }
}
.c__Str {
  .t-ac-sol & { color: @solar_cyan; }
  .t-ac-lun & { color: @lunar_cyan; }
}
.c__Cmd {
  .t-ac-sol & { color: @solar_blue; }
  .t-ac-lun & { color: @lunar_blue; }
}
.c__Arg {
  .t-ac-sol & { color: @solar_violet; }
  .t-ac-lun & { color: @lunar_indigo; }
}
.c__Obj {
  .t-ac-sol & { color: @solar_magenta; }
  .t-ac-lun & { color: @lunar_violet; }
}
.c__Tag {
  .t-ac-sol & { color: @solar_blue; }
  .t-ac-lun & { color: @lunar_blue; }
}
.c__Atr {
  .t-ac-sol & { color: @solar_yellow; }
  .t-ac-lun & { color: @lunar_yellow; }
}
.c__Val {
  .t-ac-sol & { color: @solar_cyan; }
  .t-ac-lun & { color: @lunar_cyan; }
}
.c__Sel {
  .t-ac-sol & { color: @solar_blue; }
  .t-ac-lun & { color: @lunar_blue; }
}
.c__Prp {
  .t-ac-sol & { color: @solar_yellow; }
  .t-ac-lun & { color: @lunar_yellow; }
}


// Mathematical expressions or statements.
// Input is the LaTeX syntax.
// May be applied to any Element.
// `.js-mt` - inline math ('t' stands for 'text-level')
// `.js-mb` - block math
//
// ^author
// : Chris Harvey
// ^updated
// : 2016-01-02
.js-mt {
  #CHH .VARS();
  font-family: @chh_font_family_math;
  white-space: pre;
  overflow: auto;
}
.js-mb {
  &:extend(.js-mt);
  #CHH .VARS();
  display: block;
  min-height: (3 * @chh_vru);
}
